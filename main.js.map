{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/create/create.component.ts","./src/app/create/create.component.html","./src/app/edit/edit.component.ts","./src/app/edit/edit.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/common-serv.service.ts","./src/app/app.module.ts","./src/app/app-routing/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { CommonServService } from '../common-serv.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\nexport class HomeComponent implements OnInit {\n  displayedColumns:string[] = [];\n  dataSource = [];\n\n  constructor(private serv: CommonServService, private router: Router, public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.dataSource = this.serv.dataArr;\n    this.displayedColumns = this.serv.displayedColumns;\n  }\n\n  editInfo(p_elmId){\n    this.router.navigate(['/edit', p_elmId]);\n  }\n\n  deleteInfo(ref: TemplateRef<any>,p_elmId){\n    this.serv.delData(p_elmId);\n    this.dataSource = [...this.serv.dataArr];\n    this.dialog.open(ref);\n  }\n}\n","<ng-template #firstDialog>\n  <h2 matDialogTitle>Student record information!</h2>\n  <p matDialogContent><em>Record has been deleted.</em></p>\n  <mat-dialog-actions align=\"end\">\n    <button mat-button matDialogClose>Dismiss</button>\n  </mat-dialog-actions>\n</ng-template>\n<!-- app.component.html -->\n<div class=\"container text-center mt-5\">\n  <div><h2 class=\"display-4 mb-5\">Student Information</h2></div>\n  <div class=\"text-right mb-4\"><button mat-flat-button color=\"primary\" routerLink=\"/create\">Add Entry</button></div>\n  <table mat-table [dataSource]=\"dataSource\" #mytable class=\"my-table mat-elevation-z8\">\n\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th class=\"text-center\" mat-header-cell *matHeaderCellDef> ID. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n    </ng-container>\n\n    <!-- First Name Column -->\n    <ng-container matColumnDef=\"fname\">\n      <th class=\"text-center\" mat-header-cell *matHeaderCellDef> First Name </th>\n      <td mat-cell *matCellDef=\"let element\" class=\"text-capitalize\"> {{element.fname}} </td>\n    </ng-container>\n\n    <!-- Last Name Column -->\n    <ng-container matColumnDef=\"lname\">\n      <th class=\"text-center\" mat-header-cell *matHeaderCellDef> Last Name </th>\n      <td mat-cell *matCellDef=\"let element\" class=\"text-capitalize\"> {{element.lname}} </td>\n    </ng-container>\n\n        <!-- Last Name Column -->\n        <ng-container matColumnDef=\"email\">\n          <th class=\"text-center\" mat-header-cell *matHeaderCellDef> Email </th>\n          <td mat-cell *matCellDef=\"let element\" class=\"text-lowercase\"> {{element.email}} </td>\n        </ng-container>\n\n    <!-- Gender Column -->\n    <ng-container matColumnDef=\"gender\">\n      <th class=\"text-center\" mat-header-cell *matHeaderCellDef> Gender </th>\n      <td mat-cell *matCellDef=\"let element\" class=\"text-capitalize\"> {{element.gender}} </td>\n    </ng-container>\n\n    <!-- Mobile Column -->\n    <ng-container matColumnDef=\"phone\">\n      <th class=\"text-center\" mat-header-cell *matHeaderCellDef> Phone </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.phone}} </td>\n    </ng-container>\n\n    <!-- Faculty Column -->\n    <ng-container matColumnDef=\"faculty\">\n      <th class=\"text-center\" mat-header-cell *matHeaderCellDef> Faculty </th>\n      <td mat-cell *matCellDef=\"let element\" class=\"text-capitalize\"> {{element.faculty}} </td>\n    </ng-container>\n\n    <!-- Action Column -->\n    <ng-container matColumnDef=\"action\">\n      <th class=\"text-center\" mat-header-cell *matHeaderCellDef> Action </th>\n      <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n        <a title=\"Edit info\" (click)=\"editInfo(element.id)\"><i class=\"text-primary fa fa-edit\"></i></a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n        <a title=\"Delete info\" (click)=\"deleteInfo(firstDialog, element.id)\"><i class=\"text-danger fa fa-trash\"></i></a>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { CommonServService } from '../common-serv.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.scss'],\n})\nexport class CreateComponent implements OnInit {\n  submitStatus: boolean = false;\n  inc = 5;\n  constructor(private router: Router, private formBuilder: FormBuilder, private serv: CommonServService, public dialog: MatDialog) {}\n\n  registerForm: FormGroup = this.formBuilder.group({\n    fname: [, { validators: [Validators.required], updateOn: 'change' }],\n    lname: [, { validators: [Validators.required], updateOn: 'change' }],\n    gender: ['male', { validators: [Validators.required], updateOn: 'change' }],\n    email: [\n      ,\n      {\n        validators: [Validators.required, Validators.email],\n        updateOn: 'change',\n      },\n    ],\n    phone: [, { updateOn: 'change' }],\n    faculty: [, { validators: [Validators.required], updateOn: 'change' }],\n  });\n\n  ngOnInit() {\n    this.setPhoneValidation();\n  }\n\n  setPhoneValidation() {\n    const phoneControl = this.registerForm.get('phone');\n\n    phoneControl.setValidators([\n      Validators.pattern('^[0-9]*$'),\n      Validators.required,\n    ]);\n  }\n\n  submitForm(refz: TemplateRef<any>) {\n    if(this.registerForm.valid === true){\n      this.submitStatus = true;\n      this.registerForm.value['id'] = ++this.inc;\n      this.serv.saveInfo(this.registerForm.value);\n      this.dialog.open(refz);\n      this.router.navigate(['/']);\n    }\n  }\n}\n","<ng-template #thirdDialog>\n  <h2 matDialogTitle>Studen information!</h2>\n  <p matDialogContent><em>Record added</em></p>\n  <mat-dialog-actions align=\"end\">\n    <button mat-button matDialogClose>Dismiss</button>\n  </mat-dialog-actions>\n</ng-template>\n<div class=\"container pt-5\">\n  <div class=\"row\">\n    <div class=\"col-10 mx-auto\">\n      <mat-card>\n        <h1 class=\"display-4 mb-5 text-center\">Create Information Form</h1>\n        <form [formGroup]=\"registerForm\" (submit)=\"submitForm(thirdDialog)\">\n          <div class=\"col-12\">\n            <!-- Full Name -->\n            <mat-form-field class=\"col-6 mb-3\">\n              <mat-label>First Name</mat-label>\n              <input type=\"text\" matInput formControlName=\"fname\" placeholder=\"John\" />\n              <mat-error *ngIf=\"registerForm.get('fname').hasError('required')\">\n                First Name is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n            <!-- Full Name -->\n            <mat-form-field class=\"col-6 mb-3\">\n              <mat-label>Last Name</mat-label>\n              <input type=\"text\" matInput formControlName=\"lname\" placeholder=\"Doe\" />\n              <mat-error *ngIf=\"registerForm.get('lname').hasError('required')\">\n                Last Name is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n            <br />\n          </div>\n          <div class=\"col-12\">\n            <!-- choosing the role -->\n            <mat-radio-group name=\"account_type\" class=\"mb-3\" formControlName=\"gender\">\n              <label class=\"mx-3 my-0\">Select Your Role: </label>\n              <mat-radio-button class=\"mx-2\" value=\"male\">\n                Male\n              </mat-radio-button>\n              <mat-radio-button class=\"mx-2\" value=\"female\">\n                Female\n              </mat-radio-button>\n            </mat-radio-group>\n          </div>\n          <div class=\"col-12\">\n            <!-- Email -->\n            <mat-form-field class=\"col-6 mb-3 mx-auto\">\n              <mat-label>Email</mat-label>\n              <input type=\"email\" matInput formControlName=\"email\" placeholder=\"Ex. mail@gmail.com\" />\n              <mat-error *ngIf=\"\n                  registerForm.get('email').hasError('email') &&\n                  !registerForm.get('email').hasError('required')\n                \">\n                Please enter a valid email address\n              </mat-error>\n              <mat-error *ngIf=\"registerForm.get('email').hasError('required')\">\n                Email is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n            <!-- phone number -->\n            <mat-form-field class=\"col-6 mb-3 mx-auto\">\n              <mat-label>Phone</mat-label>\n              <input type=\"text\" matInput formControlName=\"phone\" />\n              <mat-error *ngIf=\"registerForm.get('phone').hasError('required')\">\n                Phone is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col-12\">\n            <!-- Password -->\n            <mat-form-field class=\"mb-2 col-6\">\n              <mat-label>Faculty</mat-label>\n              <input type=\"text\" matInput formControlName=\"faculty\" />\n              <mat-error *ngIf=\"registerForm.get('faculty').hasError('required')\">\n                Faculty is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col-12\">\n            <button [disabled]=\"!registerForm.valid\" mat-flat-button color=\"primary\" type=\"submit\"\n              class=\"col-3 ml-3 mt-2 mb-3\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </mat-card>\n    </div>\n  </div>\n</div>","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonServService } from '../common-serv.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.scss'],\n})\nexport class EditComponent implements OnInit {\n  submitStatus: boolean = false;\n  recId: number;\n  dataz: any;\n\n  constructor(\n    private serv: CommonServService,\n    private _activeRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    public dialog: MatDialog \n  ) {}\n\n  editForm: FormGroup = this.formBuilder.group({\n    fname: [, { validators: [Validators.required], updateOn: 'change' }],\n    lname: [, { validators: [Validators.required], updateOn: 'change' }],\n    gender: [, { validators: [Validators.required], updateOn: 'change' }],\n    email: [\n      ,\n      {\n        validators: [Validators.required, Validators.email],\n        updateOn: 'change',\n      },\n    ],\n    phone: [, { updateOn: 'change' }],\n    faculty: [, { validators: [Validators.required], updateOn: 'change' }],\n  });\n\n  ngOnInit(): void {\n    this.setPhoneValidation();\n    this._activeRoute.params.subscribe((routeParams) => {\n      this.recId = routeParams.eid;\n    });\n    this.dataz = this.serv.getDataById(this.recId);\n  }\n\n  setPhoneValidation() {\n    const phoneControl = this.editForm.get('phone');\n\n    phoneControl.setValidators([\n      Validators.pattern('^[0-9]*$'),\n      Validators.required,\n    ]);\n  }\n\n  submitForm(refr: TemplateRef<any>) {\n      if (this.editForm.valid === true) {\n        this.submitStatus = true;\n        this.serv.editDetails(this.recId, this.editForm.value);\n        this.dialog.open(refr);\n        this.router.navigate(['/home']);\n\n      }\n  }\n}\n","<ng-template #secondDialog>\n  <h2 matDialogTitle>Student Information!</h2>\n  <p matDialogContent><em>Record has been updated.</em></p>\n  <mat-dialog-actions align=\"end\">\n    <button mat-button matDialogClose>Dismiss</button>\n  </mat-dialog-actions>\n</ng-template>\n<div class=\"container pt-5\">\n  <div class=\"row\">\n    <div class=\"col-10 mx-auto\">\n      <mat-card>\n        <h1 class=\"display-4 mb-5 text-center\">Update Student Information</h1>\n        <form [formGroup]=\"editForm\" (submit)=\"submitForm(secondDialog)\">\n          <div class=\"col-12\">\n            <!-- Full Name -->\n            <mat-form-field class=\"col-6 mb-3\">\n              <mat-label>First Name</mat-label>\n              <input type=\"text\" matInput formControlName=\"fname\" [(ngModel)]=\"dataz.fname\" placeholder=\"John\" />\n              <mat-error *ngIf=\"editForm.get('fname').hasError('required')\">\n                First Name is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n            <!-- Full Name -->\n            <mat-form-field class=\"col-6 mb-3\">\n              <mat-label>Last Name</mat-label>\n              <input type=\"text\" matInput formControlName=\"lname\" [(ngModel)]=\"dataz.lname\" placeholder=\"Doe\" />\n              <mat-error *ngIf=\"editForm.get('lname').hasError('required')\">\n                Last Name is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n            <br />\n          </div>\n          <div class=\"col-12\">\n            <!-- choosing the role -->\n            <mat-radio-group name=\"account_type\" class=\"mb-3\" formControlName=\"gender\" [(ngModel)]=\"dataz.gender\">\n              <label class=\"mx-3 my-0\">Gender: </label>\n              <mat-radio-button class=\"mx-2\" value=\"male\">\n                Male\n              </mat-radio-button>\n              <mat-radio-button class=\"mx-2\" value=\"female\">\n                Female\n              </mat-radio-button>\n            </mat-radio-group>\n          </div>\n          <div class=\"col-12\">\n            <!-- Email -->\n            <mat-form-field class=\"col-6 mb-3 mx-auto\">\n              <mat-label>Email</mat-label>\n              <input type=\"email\" matInput formControlName=\"email\" placeholder=\"Ex. mail@gmail.com\"\n                [(ngModel)]=\"dataz.email\" />\n              <mat-error *ngIf=\"\n                  editForm.get('email').hasError('email') &&\n                  !editForm.get('email').hasError('required')\n                \">\n                Please enter a valid email address\n              </mat-error>\n              <mat-error *ngIf=\"editForm.get('email').hasError('required')\">\n                Email is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n            <!-- phone number -->\n            <mat-form-field class=\"col-6 mb-3 mx-auto\">\n              <mat-label>Phone</mat-label>\n              <input type=\"text\" matInput formControlName=\"phone\" [(ngModel)]=\"dataz.phone\" />\n              <mat-error *ngIf=\"editForm.get('phone').hasError('required')\">\n                Phone is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col-12\">\n            <!-- Password -->\n            <mat-form-field class=\"mb-2 col-6\">\n              <mat-label>Faculty</mat-label>\n              <input type=\"text\" matInput formControlName=\"faculty\" [(ngModel)]=\"dataz.faculty\" />\n              <mat-error *ngIf=\"editForm.get('faculty').hasError('required')\">\n                Faculty is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col-12\">\n            <button [disabled]=\"!editForm.valid\" mat-flat-button color=\"primary\" type=\"submit\"\n              class=\"col-3 ml-3 mt-2 mb-3\">\n              UPDATE\n            </button>\n          </div>\n          <ng-template [ngIf]=\"submitStatus\">\n            <span>Form submitted succesfully!</span>\n          </ng-template>\n        </form>\n      </mat-card>\n    </div>\n  </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'matForm';\n}\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nexport interface UsersData {\n  id: number;\n  fname: any;\n  lname: any;\n  email: any;\n  gender: any;\n  phone: any;\n  faculty: any;\n}\n\nconst ELEMENT_DATA: UsersData[] = [\n  {\n    id: 1,\n    fname: 'John1',\n    lname: 'Doe1',\n    email: 'exapmle@exaple.com',\n    gender: 'female',\n    phone: 8787878781,\n    faculty: 'Science',\n  },\n  {\n    id: 2,\n    fname: 'John2',\n    lname: 'Doe2',\n    email: 'exapmle@exaple.com',\n    gender: 'male',\n    phone: 8787878782,\n    faculty: 'Commerce',\n  },\n  {\n    id: 3,\n    fname: 'John3',\n    lname: 'Doe3',\n    email: 'exapmle@exaple.com',\n    gender: 'female',\n    phone: 8787878783,\n    faculty: 'Arts',\n  },\n  {\n    id: 4,\n    fname: 'John4',\n    lname: 'Doe4',\n    email: 'exapmle@exaple.com',\n    gender: 'male',\n    phone: 8787878784,\n    faculty: 'Robotics',\n  },\n];\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CommonServService {\n  inc = 4;\n  dataArr = ELEMENT_DATA;\n  displayedColumns: string[] = [\n    'id',\n    'fname',\n    'lname',\n    'email',\n    'gender',\n    'phone',\n    'faculty',\n    'action',\n  ];\n  constructor(private router: Router) {}\n\n  saveInfo(p_data) {\n    p_data['id'] = ++this.inc;\n    this.dataArr.push(p_data);\n    console.log(this.dataArr);\n  }\n\n  editDetails(p_recId, p_frmData) {\n    for (var i in this.dataArr) {\n      if (this.dataArr[i].id == p_recId) {\n        this.dataArr[i].fname = p_frmData.fname;\n        this.dataArr[i].lname = p_frmData.lname;\n        this.dataArr[i].email = p_frmData.email;\n        this.dataArr[i].gender = p_frmData.gender;\n        this.dataArr[i].phone = p_frmData.phone;\n        this.dataArr[i].faculty = p_frmData.faculty;\n      }\n    }\n  }\n\n  delData(p_recId) {\n    let removeIndex;\n    for (var i = 0; i < this.dataArr.length; i++) {\n      if (this.dataArr[i].id == p_recId) {\n        removeIndex = this.dataArr\n          .map(function (item) {\n            return item.id;\n          })\n          .indexOf(p_recId);\n        this.dataArr.splice(removeIndex, 1);\n      }\n    }\n    return this.dataArr;\n  }\n\n  getDataById(p_recId) {\n    return this.dataArr.find((x) => x.id == p_recId);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { CreateComponent } from './create/create.component';\nimport { EditComponent } from './edit/edit.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    CreateComponent,\n    EditComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MatTableModule,\n    MatButtonModule,\n    MatCardModule,\n    MatRadioModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatDialogModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from '../home/home.component';\nimport { CreateComponent } from '../create/create.component';\nimport { EditComponent } from '../edit/edit.component';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'home', component: HomeComponent},\n  {path: 'create', component: CreateComponent},\n  {path: 'edit/:eid', component: EditComponent}\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports:[RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}